{"version":3,"sources":["Employee.js","customData.js","index.js"],"names":["Employee","console","log","this","props","employees","length","map","employee","index","className","key","alt","name","src","image","gender","id","created","status","species","origin","location","React","Component","customData","display","value","sort","Company","state","sortOrder","_handleInputChange","bind","fetch","then","response","json","data","setState","results","catch","error","e","target","type","checked","stateToUpdate","a","b","onSelect","selected","Toggle","specie","Fragment","htmlFor","ele","org","placeholder","onChange","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9fdad287.chunk.js","sourcesContent":["import React from 'react';\n\nclass Employee extends React.Component {\n\trender() {\n\t\tconsole.log(\"eee\", this.props.employees);\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{\n\t\t\t\t\tthis.props.employees && this.props.employees.length > 0 && this.props.employees.map((employee, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div className=\"employee-details col-sm-6 col-md-4 col-lg-3\" key={`employee-list-${index}`}>\n\t\t\t\t\t\t\t\t<div className=\"card\">\n\t\t\t\t\t\t\t\t\t<div className=\"position-relative\">\n\t\t\t\t\t\t\t\t\t\t<img className=\"card-img-top\" alt={employee.name} src={employee.image} />\n\t\t\t\t\t\t\t\t\t\t<div className=\"basic-info\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"\">\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"employee-name\">{employee.name}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"employee-gender\">({employee.gender})</span>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"employee-id\">Id: {employee.id} - </span>\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"employee-created\">{employee.created}</span>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"employee-status\"><label>Status:</label><span>{employee.status}</span></div>\n\t\t\t\t\t\t\t\t\t<div className=\"employee-species\"><label>Species:</label><span>{employee.species}</span></div>\n\t\t\t\t\t\t\t\t\t<div className=\"employee-origin\"><label>Origin:</label><span>{employee.origin && employee.origin.name}</span></div>\n\t\t\t\t\t\t\t\t\t<div className=\"employee-location\"><label>Last Location:</label><span>{employee.location && employee.location.name}</span></div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default Employee;\n","export const customData = {\n    species: [{\n        display: \"Human\",\n        value: \"Human\",\n      },{\n        display: \"Alien\",\n        value: \"Alien\",\n      },{\n        display: \"Other\",\n        value: \"Other\",\n    }],\n    gender: [{\n        display: \"Male\",\n        value: \"Male\",\n      }, {\n        display: \"Female\",\n        value: \"Female\",\n    }],\n    origin: [{\n        display: \"Earth (C-137)\",\n        value: \"Earth (C-137)\",\n      }, {\n        display: \"Earth (Replacement Dimension)\",\n        value: \"Earth (Replacement Dimension)\",\n      }, {\n        display: \"Abadango\",\n        value: \"Abadango\",\n      }, {\n        display: \"unknown\",\n        value: \"unknown\",\n    }],\n    sort: [{\n        display: \"Ascending\",\n        value: \"ascending\"\n    }, {\n        display: \"Descending\",\n        value: \"descending\"\n    }]\n}","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Employee from './Employee.js';\nimport SideNav from '@trendmicro/react-sidenav';\n\nimport 'bootstrap/scss/bootstrap.scss';\nimport './main.scss';\n\n// Be sure to include styles at some point, probably during your bootstraping\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\n\nimport { customData } from './customData';\n\n\nclass Company extends Component {\n  constructor() {\n    super();\n    this.state = {\n      employees: [],\n      species: customData.species,\n      gender: customData.gender,\n      origin: customData.origin,\n      sort: customData.sort,\n      sortOrder: \"\"\n    };\n\n    this._handleInputChange = this._handleInputChange.bind(this)\n  }\n\n  componentDidMount() {\n    fetch(\"https://rickandmortyapi.com/api/character/\")\n      .then(response => response.json())\n      .then((data) => {\n        console.log('Data', data)\n        this.setState({\n          employees: data.results\n        })\n      })\n      .catch((error) => {\n        console.log('error', error)\n      })\n  }\n\n  _handleInputChange(e) {\n    let name = e.target.name,\n      value = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\n\n    let stateToUpdate = {\n      [name]: value\n    },\n      { employees } = this.state;\n\n    if(name === \"sortOrder\") {\n        // if(value === \"ascending\") employees\n        employees.sort((a, b) => { \n          return value === \"ascending\" ? a.id - b.id :  b.id - a.id\n        });\n    }\n\n    stateToUpdate.employees = employees\n\n    this.setState(stateToUpdate)\n  }\n\n  render() {\n    let { species, gender, origin, sort } = this.state\n    return (\n      <div className=\"container-fluid company-employees\">\n        <div className=\"sidebar\">\n          <SideNav\n            onSelect={(selected) => {\n              // on selected add here\n            }}\n          >\n            <SideNav.Toggle>\n              <span className=\"filters-open\">Filters</span>\n            </SideNav.Toggle>\n            <div className=\"filter-options\">\n              <div className=\"filter-species\">\n                <h6>Species</h6>\n                <div className=\"styled-checkbox\">\n                  {\n                    species && species.length > 0 && species.map((specie, index) => {\n                      return (\n                        <React.Fragment key={`species-key-${index}`}>\n                          <input id={`species-${index}`} type=\"checkbox\" value={specie.value} />\n                          <label htmlFor={`species-${index}`}>{specie.display}</label>\n                        </React.Fragment>\n                      )\n                    })\n                  }\n                </div>\n              </div>\n              <div className=\"filter-gender\">\n                <h6>Gender</h6>\n                <div className=\"styled-checkbox\">\n                  {\n                    gender && gender.length > 0 && gender.map((ele, index) => {\n                      return (\n                        <React.Fragment key={`gender-key-${index}`}>\n                          <input id={`gender-${index}`} type=\"checkbox\" value={ele.value} />\n                          <label htmlFor={`gender-${index}`}>{ele.display} </label>\n                        </React.Fragment>\n                      )\n                    })\n                  }\n                </div>\n              </div>\n              <div className=\"filter-origin\">\n                <h6>Origin</h6>\n                <div className=\"styled-checkbox\">\n                  {\n                    origin && origin.length > 0 && origin.map((org, index) => {\n                      return (\n                        <React.Fragment key={`origin-key-${index}`}>\n                          <input id={`origin-${index}`} type=\"checkbox\" value={org.value} />\n                          <label htmlFor={`origin-  ${index}`}>{org.display}</label>\n                        </React.Fragment>\n                      )\n                    })\n                  }\n                </div>\n              </div>\n            </div>\n          </SideNav>\n        </div>\n        <div className=\"selected-filters py-3\">\n          <h5>Selected Filters</h5>\n          <div className=\"col\">\n            <div className=\"row\">\n              <span className=\"badge badge-pill badge-success\">Success Label</span>\n              <span className=\"badge badge-pill badge-success\">Success Label</span>\n            </div>\n          </div>\n        </div>\n        <div className=\"search-name\">\n          <h6>Search By Name</h6>\n          <div className=\"row\">\n            <div className=\"col\">\n              <input className=\"form-control\" placeholder=\"Name\" type=\"text\" />\n              <button className=\"btn btn-primary\">Search</button>\n            </div>\n            <div className=\"col-auto ml-auto\">\n              <select\n                className=\"form-control\"\n                value={this.state.sortOrder}\n                onChange={this._handleInputChange}\n                name=\"sortOrder\"\n              >\n                <option disabled >Sort By Id</option>\n                {\n                  sort && sort.length > 0 && sort.map((ele, index) => {\n                    return <option value={ele.value} key={`sort-${index}`}>{ele.display}</option>\n                  })\n                }\n              </select>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <Employee employees={this.state.employees} />\n        </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Company />, document.getElementById('root'));"],"sourceRoot":""}